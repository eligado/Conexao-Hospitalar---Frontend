{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projetos%20Vscode/NextJsProject1/src/app/register/page.js"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Box, Container, TextField, Button, Typography, Link, Alert } from \"@mui/material\";\r\n\r\nexport default function RegisterPage() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password1, setPassword1] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n  const [erro, setErro] = useState(false);\r\n  const router = useRouter();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password1 !== password2) {\r\n      setErro(true);\r\n      setMensagem(\"❌ As senhas não coincidem.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:8000/api/auth/registration/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password1,\r\n          password2,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        setErro(false);\r\n        setMensagem(\"✅ Cadastro realizado com sucesso! Redirecionando...\");\r\n        setTimeout(() => {\r\n          router.push(\"/login\");\r\n        }, 1200);\r\n      } else {\r\n        const errorMsg =\r\n          data?.username?.[0] ||\r\n          data?.email?.[0] ||\r\n          data?.password1?.[0] ||\r\n          data?.non_field_errors?.[0] ||\r\n          \"❌ Erro no cadastro. Verifique os dados.\";\r\n        setErro(true);\r\n        setMensagem(errorMsg);\r\n      }\r\n    } catch (err) {\r\n      setErro(true);\r\n      setMensagem(\"❌ Erro de rede ou servidor.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" height=\"100vh\">\r\n      {/* Lado esquerdo */} \r\n      <Box\r\n        flex={1}\r\n        sx={{\r\n          background: \"linear-gradient(to bottom, #2196f3, #1e88e5)\",\r\n          color: \"white\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" sx={{ fontWeight: \"bold\" }}>\r\n          Conexão Hospitalar\r\n        </Typography>\r\n      </Box>\r\n\r\n      {/* Lado direito - Formulário */}\r\n      <Box flex={1} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Faça seu cadastro\r\n          </Typography>\r\n\r\n          <form onSubmit={handleRegister}>\r\n            <Box mb={2}>\r\n              <TextField\r\n                label=\"Usuário\"\r\n                type=\"text\"\r\n                fullWidth\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n              />\r\n            </Box>\r\n            <Box mb={2}>\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                fullWidth\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </Box>\r\n            <Box mb={2}>\r\n              <TextField\r\n                label=\"Senha\"\r\n                type=\"password\"\r\n                fullWidth\r\n                value={password1}\r\n                onChange={(e) => setPassword1(e.target.value)}\r\n                required\r\n              />\r\n            </Box>\r\n            <Box mb={2}>\r\n              <TextField\r\n                label=\"Confirmar senha\"\r\n                type=\"password\"\r\n                fullWidth\r\n                value={password2}\r\n                onChange={(e) => setPassword2(e.target.value)}\r\n                required\r\n              />\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              mb={2}\r\n            >\r\n              <Link href=\"/login\" variant=\"body2\" underline=\"hover\">\r\n                Já tem uma conta? Faça login\r\n              </Link>\r\n            </Box>\r\n\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Cadastrar\r\n            </Button>\r\n\r\n            {/* ✅ Mensagem abaixo do botão */}\r\n            {mensagem && (\r\n              <Box mt={2}>\r\n                <Alert severity={erro ? \"error\" : \"success\"}>{mensagem}</Alert>\r\n              </Box>\r\n            )}\r\n          </form>\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}