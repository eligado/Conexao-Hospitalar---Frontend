{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projetos%20Vscode/NextJsProject1/src/app/hospitais/page.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n    Container,\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Chip,\r\n    Box,\r\n    Divider,\r\n    Link\r\n} from \"@mui/material\";\r\n\r\nexport default function Page() {\r\n    const [hospitais, setHospitais] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://127.0.0.1:8000/api/hospitais/\")\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setHospitais(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Fetch error:\", error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ mt: 4, mb: 2 }}>\r\n                Hospitais Cadastrados\r\n            </Typography>\r\n\r\n            {hospitais.map((hospital) => (\r\n                <Card key={hospital.codigo} sx={{ mb: 3, boxShadow: 3 }}>\r\n                    <CardContent>\r\n                        {hospital.imagem && (\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"200\"\r\n                                image={`http://127.0.0.1:8000/${hospital.imagem}`}\r\n                                alt={hospital.nome}\r\n                                sx={{ mb: 2 }}\r\n                            />\r\n                        )}\r\n\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            {hospital.nome}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {hospital.descricao}\r\n                        </Typography>\r\n\r\n                        <Divider sx={{ my: 2 }} />\r\n\r\n                        <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n                            <Typography><strong>Endereço:</strong> {hospital.endereco}</Typography>\r\n                            <Typography><strong>Horário de Funcionamento:</strong> {hospital.hora_funcionamento}</Typography>\r\n                            <Typography>\r\n                                <strong>Telefone:</strong>{\" \"}\r\n                                <Link href={`tel:${hospital.telefone}`}>{hospital.telefone}</Link>\r\n                            </Typography>\r\n                            <Typography>\r\n                                <strong>Email:</strong>{\" \"}\r\n                                <Link href={`mailto:${hospital.email}`}>{hospital.email}</Link>\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <Typography variant=\"subtitle2\"><strong>Especialidades:</strong></Typography>\r\n                            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\r\n                                {hospital.especialidades.split(',').map((especialidade, index) => (\r\n                                    <Chip\r\n                                        key={index}\r\n                                        label={especialidade.trim()}\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                ))}\r\n                            </Box>\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n        </Container>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}